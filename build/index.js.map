{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;QAegB,Y,GAAA,Y;QAaA,oB,GAAA,oB;QA8BA,yB,GAAA,yB;QAaA,uB,GAAA,uB;AAvEhB,IAAM,KAAK,QAAQ,IAAR,CAAX;AACA,IAAM,MAAM,QAAQ,SAAR,CAAZ;AACA,IAAM,SAAS,QAAQ,MAAR,EAAgB,OAA/B;AACA,IAAM,QAAQ,QAAQ,OAAR,CAAd;AACA,IAAM,kBAAkB,QAAQ,mBAAR,CAAxB;AACA,IAAM,WAAW,QAAQ,UAAR,CAAjB;AACA,IAAM,QAAQ,QAAQ,gBAAR,CAAd;AACA,IAAM,SAAS,QAAQ,QAAR,CAAf;;AAEA,IAAM,iBAAiB,WAAvB;;AAEA,IAAM,gBAAgB,SAAhB,aAAgB,GAAM;AAC1B;AACD,CAFD;;AAIO,SAAS,YAAT,CAAsB,WAAtB,EAAmC,MAAnC,EAA2C,YAA3C,EAAyD,QAAzD,EAAmE;AACxE,SAAO,qBAAqB,WAArB,EAAkC,MAAlC,EAA0C,YAA1C,EACJ,UADI,CACO,QADP,CAAP;AAED;;AAED;;;;;;;;AAQO,SAAS,oBAAT,CAA8B,WAA9B,EAA2C,MAA3C,EAAmD,YAAnD,EAAiE,QAAjE,EAA2E;AAChF,MAAI,cAAc,EAAlB;;AAEA,SAAO,qBAAqB,WAArB,EAAkC,MAAlC,EAA0C,YAA1C,EAAwD,QAAxD,EACF,IADE,CACG,kBAAU;AACd,kBAAc,OAAO,WAArB;;AAEA,QAAI,CAAC,OAAO,cAAP,CAAsB,MAAtB,CAAD,KACC,CAAC,OAAO,IAAP,CAAY,cAAZ,CAA2B,MAA3B,CAAD,IACA,CAAC,OAAO,IAAP,CAAY,cAAZ,CAA2B,oBAA3B,CADD,IAEA,CAAC,OAAO,IAAP,CAAY,cAAZ,CAA2B,WAA3B,CAFD,IAGA,CAAC,OAAO,IAAP,CAAY,cAAZ,CAA2B,MAA3B,CAJF,CAAJ,EAI0C;AACxC,YAAM,IAAI,KAAJ,CAAU,gJAAV,CAAN;AACD;;AAEF,WAAO,kCAAkC,OAAO,IAAzC,CAAP;AACA,GAbE,EAaA,IAbA,CAaK,uBAAe;AACrB,QAAI,cAAc,OAAO,IAAP,CAAY,WAAZ,GAA0B,KAAK,SAAL,CAAe,OAAO,IAAP,CAAY,WAA3B,CAA1B,GAAoE,IAAtF;AACA,WAAO,iCAAiC,EAAC,MAAM,OAAO,IAAP,CAAY,IAAnB,EAAyB,SAAS,CAAC,EAAC,IAAO,OAAO,YAAd,SAA8B,OAAO,IAAP,CAAY,IAA3C,EAAmD,KAAK,WAAxD,EAAqE,OAAO,WAA5E,EAAD,CAAlC,EAAjC,CAAP;AACD,GAhBE,EAgBA,KAhBA,CAgBM,UAAC,GAAD,EAAS;AAChB,YAAQ,KAAR,aAAwB,KAAK,SAAL,CAAe,GAAf,CAAxB;AACA,UAAM,GAAN;AACD,GAnBE,EAmBA,UAnBA,CAmBW,QAnBX,CAAP;AAoBD;;AAED;;;;;AAKO,SAAS,yBAAT,CAAmC,MAAnC,EAA2C,QAA3C,EAAoD;AACzD,SAAO,kCAAkC,MAAlC,EACF,KADE,CACI,UAAC,GAAD,EAAS;AACd,YAAQ,KAAR,aAAwB,KAAK,SAAL,CAAe,GAAf,CAAxB;AACA,UAAM,GAAN;AACD,GAJE,EAIA,UAJA,CAIW,QAJX,CAAP;AAKD;;AAED;;;;;AAKO,SAAS,uBAAT,CAAiC,MAAjC,EAAyC,QAAzC,EAAkD;AACvD,SAAO,iCAAiC,MAAjC,EACF,KADE,CACI,UAAC,GAAD,EAAS;AACd,YAAQ,KAAR,aAAwB,KAAK,SAAL,CAAe,GAAf,CAAxB;AACA,UAAM,IAAN;AACD,GAJE,EAKF,UALE,CAKS,QALT,CAAP;AAMD;;AAED,IAAI,uBAAuB,SAAvB,oBAAuB,CAAS,WAAT,EAAsB,MAAtB,EAA8B,YAA9B,EAA2C;AACpE,MAAI,cAAc,EAAlB;AACA,MAAI,CAAC,YAAL,EAAmB;AACjB,QAAI,aAAa,MAAjB,EAAyB;AACvB,UAAI,MAAJ,CAAW,WAAX,GAAyB,IAAI,IAAI,wBAAR,CAAiC,EAAC,SAAS,OAAO,OAAjB,EAAjC,CAAzB;AACD;;AAED,QAAI,QAAQ,GAAR,CAAY,WAAhB,EAA6B;AAC3B,UAAI,CAAC,IAAI,MAAJ,CAAW,WAAhB,EAA6B;AAC3B,YAAI,MAAJ,CAAW,WAAX,GAAyB,EAAzB;AACD;;AAED,UAAI,MAAJ,CAAW,WAAX,CAAuB,KAAvB,GAA+B,IAAI,eAAJ,CAAoB,QAAQ,GAAR,CAAY,WAAhC,CAA/B;AACD;;AAED,mBAAe,IAAI,IAAI,MAAR,CAAe;AAC5B,cAAQ,YAAY,MAAZ,GAAqB,OAAO,MAA5B,GAAqC,WADjB;AAE5B,mBAAa,iBAAiB,MAAjB,GAA0B,OAAO,WAAjC,GAA+C,EAFhC;AAG5B,uBAAiB,qBAAqB,MAArB,GAA8B,OAAO,eAArC,GAAuD;AAH5C,KAAf,CAAf;;AAMA,YAAQ,GAAR,mCAA4C,OAAO,WAAnD;AACD;;AAED,MAAI,YAAY,IAAI,IAAI,GAAR,CAAY;AAC1B,YAAQ,YAAY,MAAZ,GAAqB,OAAO,MAA5B,GAAqC,WADnB;AAE1B,iBAAa,iBAAiB,MAAjB,GAA0B,OAAO,WAAjC,GAA+C,EAFlC;AAG1B,qBAAiB,qBAAqB,MAArB,GAA8B,OAAO,eAArC,GAAuD;AAH9C,GAAZ,CAAhB;;AAMA,MAAI,uBAAuB,IAAI,IAAI,cAAR,CAAuB;AAChD,YAAQ,YAAY,MAAZ,GAAqB,OAAO,MAA5B,GAAqC,WADG;AAEhD,iBAAa,iBAAiB,MAAjB,GAA0B,OAAO,WAAjC,GAA+C,EAFZ;AAGhD,qBAAiB,qBAAqB,MAArB,GAA8B,OAAO,eAArC,GAAuD;AAHxB,GAAvB,CAA3B;;AAMA,MAAI,SAAS;AACX,kBAAc,OAAO,YADV;AAEX,iBAAa,OAAO,WAFT;AAGX,aAAS,OAAO,OAHL;AAIX,UAAM,OAAO,IAAP,IAAe,uDAJV;AAKX,aAAS,OAAO,OAAP,IAAkB,EALhB;AAMX,gBAAY,OAAO,UAAP,IAAqB,GANtB;AAOX,aAAS,OAAO,OAAP,IAAkB;AAPhB,GAAb;;AAUA,SAAO,mBAAmB,YAAnB,EAAiC,OAAO,YAAxC,EACF,IADE,CACG,UAAC,SAAD,EAAe;AACnB,QAAI,CAAC,UAAU,YAAf,EAA6B;AAC3B,aAAO,sBAAsB,YAAtB,EAAoC,WAApC,EAAiD,MAAjD,EACF,IADE,CACG,UAAC,oBAAD,EAA0B;AAC9B,sBAAc,qBAAqB,WAAnC;AACD,OAHE,EAIF,IAJE,CAIG;AAAA,eAAM,mBAAmB,YAAnB,EAAiC,MAAjC,CAAN;AAAA,OAJH,EAKF,IALE,CAKG;AAAA,eAAM,kBAAkB,YAAlB,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD,WAAnD,CAAN;AAAA,OALH,EAMF,IANE,CAMG,YAAM;AACV,YAAI,6BAA6B,SAA7B,0BAA6B,GAAM;AAAC,iBAAO,eAAe,YAAf,EAA6B,oBAA7B,EAAmD,MAAnD,EAA2D,MAA3D,CAAP;AAA0E,SAAlH;AACA,eAAO,MAAM,0BAAN,EAAkC,EAAC,WAAW,CAAZ,EAAe,UAAU,IAAzB,EAA+B,SAAS,GAAxC,EAAlC,CAAP;AACD,OATE,EAUF,KAVE,CAUI,UAAC,GAAD,EAAS;AACd,gBAAQ,KAAR,aAAwB,KAAK,SAAL,CAAe,GAAf,CAAxB;AACA,cAAM,GAAN;AACD,OAbE,CAAP;AAcD,KAfD,MAeM;AAAA;AACJ,YAAI,sBAAsB,UAAU,WAApC;AACA;AAAA,aAAO,sBAAsB,YAAtB,EAAoC,WAApC,EAAiD,MAAjD,EACF,IADE,CACG;AAAA,mBAAM,mBAAmB,YAAnB,EAAiC,MAAjC,CAAN;AAAA,WADH,EAEF,IAFE,CAEG;AAAA,mBAAM,kBAAkB,YAAlB,EAAgC,SAAhC,EAA2C,MAA3C,EAAmD,mBAAnD,CAAN;AAAA,WAFH,EAGF,IAHE,CAGG;AAAA,mBAAM,sBAAsB,YAAtB,EAAoC,MAApC,CAAN;AAAA,WAHH,EAIF,IAJE,CAIG,YAAM;AACV,gBAAI,6BAA6B,SAA7B,0BAA6B,GAAM;AAAC,qBAAO,eAAe,YAAf,EAA6B,oBAA7B,EAAmD,MAAnD,EAA2D,MAA3D,CAAP;AAA0E,aAAlH;AACA,mBAAO,MAAM,0BAAN,EAAkC,EAAC,WAAW,CAAZ,EAAe,UAAU,IAAzB,EAA+B,SAAS,GAAxC,EAAlC,CAAP;AACD,WAPE,EAQF,KARE,CAQI,UAAC,GAAD,EAAS;AACd,oBAAQ,KAAR,aAAwB,KAAK,SAAL,CAAe,GAAf,CAAxB;AACA,kBAAM,GAAN;AACD,WAXE;AAAP;AAFI;;AAAA;AAcL;AACF,GAhCE,EAiCF,KAjCE,CAiCI,UAAC,GAAD,EAAS;AACd,YAAQ,KAAR,aAAwB,KAAK,SAAL,CAAe,GAAf,CAAxB;AACA,UAAM,GAAN;AACD,GApCE,CAAP;AAqCD,CAnFD;;AAqFA;;;;;;AAMA,IAAI,oCAAoC,SAApC,iCAAoC,CAAU,MAAV,EAAkB;AACxD;;;;;;;;;AASA,MAAI,SAAS;AACX,UAAM,OAAO,IADF;AAEX,wBAAoB,OAAO,kBAFhB;AAGX,UAAM,OAAO,IAAP,IAAe,uDAHV;AAIX,WAAO,OAAO,SAAP,GAAmB,SAAnB,GAA+B;AAJ3B,GAAb;;AAOA,MAAI,mBAAmB,IAAI,IAAI,gBAAR,CAAyB;AAC9C,YAAQ,YAAY,MAAZ,GAAqB,OAAO,MAA5B,GAAqC,WADC;AAE9C,iBAAa,iBAAiB,MAAjB,GAA0B,OAAO,WAAjC,GAA+C,EAFd;AAG9C,qBAAiB,qBAAqB,MAArB,GAA8B,OAAO,eAArC,GAAuD;AAH1B,GAAzB,CAAvB;;AAMA,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,qBAAiB,OAAjB,CAAyB,MAAzB,EAAiC,UAAU,GAAV,EAAe,IAAf,EAAqB;AACpD,UAAI,GAAJ,EAAS;AACP,eAAO,OAAO,GAAP,CAAP;AACD;;AAED,aAAO,QAAQ,IAAR,CAAP;AACD,KAND;AAOD,GARM,CAAP;AASD,CAhCD;;AAkCA,IAAI,mCAAmC,SAAnC,gCAAmC,CAAS,MAAT,EAAiB;AACtD,MAAI,mBAAmB,IAAI,IAAI,gBAAR,CAAyB;AAC9C,YAAQ,YAAY,MAAZ,GAAqB,OAAO,MAA5B,GAAqC,WADC;AAE9C,iBAAa,iBAAiB,MAAjB,GAA0B,OAAO,WAAjC,GAA+C,EAFd;AAG9C,qBAAiB,qBAAqB,MAArB,GAA8B,OAAO,eAArC,GAAuD;AAH1B,GAAzB,CAAvB;;AAMA;AACA,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,qBAAiB,UAAjB,CAA4B,MAA5B,EAAoC,UAAU,GAAV,EAAe,IAAf,EAAqB;AACvD,UAAI,GAAJ,EAAS;AACP,eAAO,OAAO,GAAP,CAAP;AACD;;AAED,aAAO,QAAQ,IAAR,CAAP;AACD,KAND;AAOD,GARM,CAAP;AASD,CAjBD;;AAmBA;;;;;;;;;;AAUA,IAAI,qBAAqB,SAArB,kBAAqB,CAAU,YAAV,EAAwB,YAAxB,EAAsC;AAC7D,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,QAAI,oBAAoB;AACtB,oBAAc;AADQ,KAAxB;;AAIA,iBAAa,WAAb,CAAyB,iBAAzB,EAA4C,UAAU,GAAV,EAAe,IAAf,EAAqB;AAC/D,UAAI,OAAO,IAAI,UAAJ,KAAmB,GAA9B,EAAmC;AACjC,gBAAQ,GAAR,kFAA2F,KAAK,SAAL,CAAe,GAAf,CAA3F;AACA,eAAO,GAAP;AACD,OAHD,MAIK,IAAI,OAAO,IAAI,UAAJ,KAAmB,GAA9B,EAAmC;AACtC,gBAAQ,GAAR,qCAA8C,YAA9C;AACA,gBAAQ,EAAC,cAAc,KAAf,EAAR;AACD,OAHI,MAIA;AACH,gBAAQ,GAAR,iCAA0C,YAA1C;AACA,gBAAQ;AACN,wBAAc,IADR;AAEN,uBAAa,KAAK,aAAL,CAAmB;AAF1B,SAAR;AAID;AACF,KAhBD;AAiBD,GAtBM,CAAP;AAuBD,CAxBD;;AA0BA;;;;;;;;AAQA,IAAI,wBAAwB,SAAxB,qBAAwB,CAAU,YAAV,EAAwB,WAAxB,EAAqC,MAArC,EAA6C;AACvE,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,YAAQ,GAAR,8CAAuD,OAAO,YAA9D;AACA,QAAI,OAAO,GAAG,YAAH,CAAgB,WAAhB,CAAX;;AAEA,WAAO,IAAP,GAAc,EAAC,SAAS,IAAV,EAAd;AACA,iBAAa,cAAb,CAA4B,MAA5B,EAAoC,UAAU,GAAV,EAAe,IAAf,EAAqB;AACvD,UAAI,GAAJ,EAAS;AACP,gBAAQ,MAAR,2EAAuF,KAAK,SAAL,CAAe,GAAf,CAAvF;AACA,eAAO,GAAP;AACD,OAHD,MAGO;AACL,gBAAQ,GAAR,0CAAmD,KAAK,SAAL,CAAe,IAAf,CAAnD;AACA,gBAAQ,EAAC,aAAa,KAAK,WAAnB,EAAR;AACD;AACF,KARD;AASD,GAdM,CAAP;AAeD,CAhBD;;AAkBA;;;;;;;;AAQA,IAAI,wBAAwB,SAAxB,qBAAwB,CAAU,YAAV,EAAwB,WAAxB,EAAqC,MAArC,EAA6C;AACvE,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,YAAQ,GAAR,8CAAuD,OAAO,YAA9D;AACA,QAAI,OAAO,GAAG,YAAH,CAAgB,WAAhB,CAAX;;AAEA,QAAI,uBAAuB;AACzB,oBAAc,OAAO,YADI;AAEzB,eAAS,IAFgB;AAGzB,eAAS;AAHgB,KAA3B;;AAMA,iBAAa,kBAAb,CAAgC,oBAAhC,EAAsD,UAAU,GAAV,EAAe,IAAf,EAAqB;AACzE,UAAI,GAAJ,EAAS;AACP,gBAAQ,MAAR,4BAAwC,KAAK,SAAL,CAAe,GAAf,CAAxC;AACA,eAAO,GAAP;AACD,OAHD,MAGO;AACL,qBAAa,2BAAb,CAAyC,MAAzC,EAAiD,UAAU,GAAV,EAAe,IAAf,EAAqB;AACpE,cAAI,GAAJ,EAAS;AACP,oBAAQ,KAAR,yCAAoD,KAAK,SAAL,CAAe,GAAf,CAApD;AACA,mBAAO,GAAP;AACD,WAHD,MAGO;AACL,oBAAQ,GAAR,kDAA2D,OAAO,YAAlE,iBAA0F,KAAK,SAAL,CAAe,IAAf,CAA1F;AACA;AACD;AACF,SARD;AASD;AACF,KAfD;AAgBD,GA1BM,CAAP;AA2BD,CA5BD;;AA8BA;;;;;;;AAOA,IAAI,qBAAqB,SAArB,kBAAqB,CAAU,YAAV,EAAwB,MAAxB,EAAgC;AACvD,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,QAAI,CAAC,OAAO,WAAZ,EAAyB;AACvB;AACA;AACD;;AAED,QAAI,cAAc,OAAO;AACvB,oBAAc,OAAO;AADE,KAAP,EAEf,OAAO,WAFQ,CAAlB;;AAIA,QAAI,+BAA+B;AACjC,oBAAc,YAAY,YADO;AAEjC,sBAAgB,YAAY;AAFK,KAAnC;;AAKA,iBAAa,uBAAb,CAAqC,4BAArC,EAAmE,UAAU,GAAV,EAAe,IAAf,EAAqB;AACtF,UAAI,GAAJ,EAAS;AACP,gBAAQ,KAAR,CAAc,wEAAd;AACA,gBAAQ,KAAR,aAAwB,GAAxB;AACA,eAAO,GAAP;AACD,OAJD,MAIO,IAAI,KAAK,mBAAL,CAAyB,MAAzB,KAAoC,CAAxC,EAA2C;AAChD,qBAAa,wBAAb,CAAsC,WAAtC,EAAmD,UAAU,GAAV,EAAe,IAAf,EAAqB;AACtE,cAAI,GAAJ,EAAS;AACP,oBAAQ,KAAR,oDAA+D,GAA/D;AACA,mBAAO,GAAP;AACD,WAHD,MAGO;AACL;AACD;AACF,SAPD;AAQD,OATM,MASA;AACL,cAAM,UAAN,CAAiB,KAAK,mBAAtB,EAA2C,UAAU,OAAV,EAAmB,gBAAnB,EAAqC;;AAE9E,cAAI,iCAAiC;AACnC,kBAAM,QAAQ,IADqB;AAEnC,uBAAW,YAAY;AAFY,WAArC;;AAKA,uBAAa,wBAAb,CAAsC,8BAAtC,EAAsE,gBAAtE;AACD,SARD,EAQG,UAAU,GAAV,EAAe;AAChB,cAAI,GAAJ,EAAS;AACP,oBAAQ,KAAR,0CAAqD,GAArD;AACA,mBAAO,GAAP;AACD,WAHD,MAIK;AACH;AACD;AACF,SAhBD;AAiBD;AACF,KAjCD;AAkCD,GAjDM,CAAP;AAkDD,CAnDD;;AAqDA;;;;;;;;;AASA,IAAI,oBAAoB,SAApB,iBAAoB,CAAU,YAAV,EAAwB,SAAxB,EAAmC,MAAnC,EAA2C,WAA3C,EAAwD;AAC9E,MAAI,CAAC,OAAO,UAAZ,EAAwB;AACtB,WAAO,SAAS,OAAT,CAAiB,IAAjB,CAAP;AACD;;AAED,SAAO,SAAS,IAAT,CAAc,OAAO,UAArB,EAAiC,UAAC,YAAD,EAAe,YAAf,EAA6B,MAA7B,EAAwC;AAC9E,YAAQ,GAAR,sBAA+B,YAA/B,YAAkD,MAAlD;AACA,YAAQ,GAAR,qBAA8B,KAAK,SAAL,CAAe,YAAf,CAA9B;AACA,QAAI,sBAAsB,aAAa,QAAvC;AACA,QAAI,0BAA0B,aAAa,WAA3C;AACA,QAAI,YAAY,aAAa,QAAb,CAAsB,KAAtB,CAA4B,GAA5B,EAAiC,GAAjC,EAAhB;;AAEA,WAAO,wBAAwB,SAAxB,EAAmC,SAAnC,EACJ,IADI,CACC;AAAA,aAAM,wBAAwB,YAAxB,EAAsC,SAAtC,EAAiD,MAAjD,EAAyD,WAAzD,EAAsE,SAAtE,EAAiF,mBAAjF,EAAsG,uBAAtG,CAAN;AAAA,KADD,EAEJ,KAFI,CAEE,UAAC,GAAD,EAAS;AACd,cAAQ,KAAR,aAAwB,KAAK,SAAL,CAAe,GAAf,CAAxB;AACA,YAAM,GAAN;AACD,KALI,CAAP;AAMD,GAbM,CAAP;AAcD,CAnBD;;AAqBA;;;;;;;AAOA,IAAI,0BAA0B,SAA1B,uBAA0B,CAAU,SAAV,EAAqB,SAArB,EAAgC;AAC5D,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,QAAI,kBAAkB,EAAtB;;AAEA,cAAU,UAAV,CAAqB,eAArB,EAAsC,UAAU,GAAV,EAAe,IAAf,EAAqB;AACzD,UAAI,GAAJ,EAAS;AACP,gBAAQ,KAAR,sCAAiD,KAAK,SAAL,CAAe,GAAf,CAAjD;AACA,eAAO,GAAP;AACD,OAHD,MAIK;AACH,YAAI,aAAa,OAAO,IAAP,CAAY,KAAK,MAAjB,EAAyB,UAAC,CAAD;AAAA,iBAAO,EAAE,QAAF,KAAe,SAAtB;AAAA,SAAzB,CAAjB;AACA,YAAI,CAAC,OAAO,WAAP,CAAmB,UAAnB,CAAL,EAAqC;AACnC;AACD,SAFD,MAEO;AACL,cAAI,eAAe;AACjB,kBAAM;AADW,WAAnB;;AAIA,oBAAU,WAAV,CAAsB,YAAtB,EAAoC,UAAU,GAAV,EAAe,IAAf,EAAqB;AACvD,gBAAI,GAAJ,EAAS;AACP,sBAAQ,KAAR,uCAAkD,KAAK,SAAL,CAAe,GAAf,CAAlD;AACA,qBAAO,GAAP;AACD,aAHD,MAIK;AACH;AACD;AACF,WARD;AASD;AACF;AACF,KAzBD;AA0BD,GA7BM,CAAP;AA8BD,CA/BD;;AAiCA;;;;;;;;;;;;AAYA,IAAI,0BAA0B,SAA1B,uBAA0B,CAAU,YAAV,EAAwB,SAAxB,EAAmC,MAAnC,EAA2C,WAA3C,EAAwD,SAAxD,EAAmE,mBAAnE,EAAwF,uBAAxF,EAAiH;AAC7I,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;;AAEvC,QAAI,YAAY;AACd,gBAAU,QADI;AAEd,gBAAU,WAFI;AAGd,gBAAU;AAHI,KAAhB;;AAMA,cAAU,SAAV,CAAoB,SAApB,EAA+B,UAAU,GAAV,EAAe,IAAf,EAAqB;AAClD,UAAI,GAAJ,EAAS;AACP,gBAAQ,KAAR,iDAA4D,SAA5D,qBAAqF,UAAU,QAA/F,kBAAoH,KAAK,SAAL,CAAe,GAAf,CAApH;AACA,eAAO,GAAP;AACD,OAHD,MAIK;AACH,YAAI,yBAAyB;AAC3B,wBAAc,OAAO,YADM;AAE3B,uBAAa;AAFc,SAA7B;AAIA,qBAAa,gBAAb,CAA8B,sBAA9B,EAAsD,UAAU,GAAV,EAAe,IAAf,EAAqB;AACzE,cAAI,OAAO,IAAI,UAAJ,KAAmB,GAA9B,EAAmC;AACjC,oBAAQ,KAAR,yCAAoD,KAAK,SAAL,CAAe,GAAf,CAApD;AACD,WAFD,MAGK,IAAI,OAAO,IAAI,UAAJ,KAAmB,GAA9B,EAAmC;AACtC,oBAAQ,KAAR,2CAAsD,KAAK,SAAL,CAAe,GAAf,CAAtD;AACD,WAFI,MAGA;AACH,oBAAQ,GAAR,8CAAuD,KAAK,SAAL,CAAe,IAAf,CAAvD;AACD;;AAED,cAAI,mBAAmB;AACrB,0BAAc,OAAO,YADA;AAErB,oBAAQ,uBAFa;AAGrB,uBAAW,mBAHU;AAIrB,yBAAa,uBAJQ;AAKrB,uBAAW;AALU,WAAvB;AAOA,uBAAa,aAAb,CAA2B,gBAA3B,EAA6C,UAAU,GAAV,EAAe,IAAf,EAAqB;AAChE,gBAAI,GAAJ,EAAS;AACP,sBAAQ,KAAR,wCAAmD,KAAK,SAAL,CAAe,GAAf,CAAnD;AACA,qBAAO,GAAP;AACD,aAHD,MAIK;AACH,sBAAQ,GAAR,6CAAsD,KAAK,SAAL,CAAe,IAAf,CAAtD;AACA;AACD;AACF,WATD;AAUD,SA5BD;AA6BD;AACF,KAxCD;AAyCD,GAjDM,CAAP;AAkDD,CAnDD;;AAqDA;;;;;;;AAOA,IAAI,wBAAwB,SAAxB,qBAAwB,CAAU,YAAV,EAAwB,MAAxB,EAAgC;AAC1D,SAAO,gBAAgB,YAAhB,EAA8B,MAA9B,EACJ,IADI,CACC;AAAA,WAAM,wBAAwB,YAAxB,EAAsC,MAAtC,CAAN;AAAA,GADD,EAEJ,IAFI,CAEC,UAAC,kBAAD,EAAwB;;AAE5B,QAAI,mBAAmB,EAAvB;AACA,QAAI,OAAO,mBAAmB,QAAnB,CAA4B,mBAAmB,QAAnB,CAA4B,MAA5B,GAAqC,CAAjE,EAAoE,OAA/E;AACA,SAAK,IAAI,QAAQ,CAAjB,EAAoB,QAAQ,mBAAmB,QAAnB,CAA4B,MAAxD,EAAgE,EAAE,KAAlE,EAAyE;AACvE,UAAI,UAAU,mBAAmB,QAAnB,CAA4B,KAA5B,EAAmC,OAAjD;AACA,UAAI,YAAY,SAAZ,IAAyB,YAAY,IAAzC,EAA+C;AAC7C,yBAAiB,IAAjB,CAAsB,6BAA6B,YAA7B,EAA2C,MAA3C,EAAmD,OAAnD,CAAtB;AACD;AACF;;AAED,WAAO,SAAS,GAAT,CAAa,gBAAb,CAAP;AAED,GAfI,CAAP;AAgBD,CAjBD;;AAmBA;;;;;;;AAOA,IAAI,kBAAkB,SAAlB,eAAkB,CAAU,YAAV,EAAwB,MAAxB,EAAgC;AACpD,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,QAAI,uBAAuB,EAAC,cAAc,OAAO,YAAtB,EAA3B;;AAEA,iBAAa,cAAb,CAA4B,oBAA5B,EAAkD,UAAU,GAAV,EAAe,IAAf,EAAqB;AACrE,UAAI,GAAJ,EAAS;AACP,gBAAQ,KAAR,wCAAmD,KAAK,SAAL,CAAe,GAAf,CAAnD;AACA,eAAO,GAAP;AACD,OAHD,MAGO;AACL,gBAAQ,GAAR,6CAAsD,KAAK,SAAL,CAAe,IAAf,CAAtD;AACA,gBAAQ,IAAR;AACD;AACF,KARD;AASD,GAZM,CAAP;AAaD,CAdD;;AAgBA;;;;;;;AAOA,IAAI,0BAA0B,SAA1B,uBAA0B,CAAU,YAAV,EAAwB,MAAxB,EAAgC;AAC5D,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,QAAI,qBAAqB,EAAC,cAAc,OAAO,YAAtB,EAAzB;AACA,iBAAa,sBAAb,CAAoC,kBAApC,EAAwD,UAAU,OAAV,EAAmB,IAAnB,EAAyB;AAC/E,UAAI,OAAJ,EAAa;AACX,gBAAQ,KAAR,0DAAqE,KAAK,SAAL,CAAe,OAAf,CAArE;AACA,eAAO,OAAP;AACD,OAHD,MAGO;AACL,gBAAQ,IAAR;AACD;AACF,KAPD;AAQD,GAVM,CAAP;AAWD,CAZD;;AAcA;;;;;;;;AAQA,IAAI,+BAA+B,SAA/B,4BAA+B,CAAU,YAAV,EAAwB,MAAxB,EAAgC,OAAhC,EAAyC;AAC1E,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAa;;AAE/B,QAAI,uBAAuB;AACzB,oBAAc,OAAO,YADI;AAEzB,iBAAW;AAFc,KAA3B;;AAKA,iBAAa,cAAb,CAA4B,oBAA5B,EAAkD,UAAU,GAAV,EAAe,IAAf,EAAqB;AACrE,UAAI,GAAJ,EAAS;AACP,gBAAQ,KAAR,sDAAiE,OAAO,YAAxE,oBAAmG,OAAnG;AACD,OAFD,MAGK;AACH,gBAAQ,GAAR,0DAAmE,OAAO,YAA1E,oBAAqG,OAArG;AACD;AACD;AACD,KARD;AASD,GAhBM,CAAP;AAiBD,CAlBD;;AAoBA;;;;;;;;;AASA,IAAI,iBAAiB,SAAjB,cAAiB,CAAU,YAAV,EAAwB,oBAAxB,EAA8C,MAA9C,EAAsD,MAAtD,EAA8D;AACjF,MAAI,CAAC,OAAO,OAAZ,EAAqB;AACnB,WAAO,QAAQ,OAAR,CAAgB,sBAAhB,CAAP;AACD;AACD,SAAO,oCAAoC,YAApC,EAAkD,MAAlD,EACJ,IADI,CACC;AAAA,WAAM,kCAAkC,oBAAlC,EAAwD,MAAxD,EAAgE,MAAhE,CAAN;AAAA,GADD,EAEJ,KAFI,CAEE,eAAO;AACZ,QAAI,mBAAmB,OAAO,GAAP,CAAW,GAAX,EAAgB,YAAhB,EAA8B,EAA9B,CAAvB;AACA,YAAQ,KAAR,qDAAgE,gBAAhE;AACA,QAAG,qBAAqB,GAArB,IAA4B,IAAI,UAAJ,KAAmB,KAAlD,EAAyD;AACvD,cAAQ,KAAR;AACA,YAAM,IAAI,MAAM,SAAV,kDAAmE,KAAK,SAAL,CAAe,GAAf,CAAnE,OAAN;AACD;AACF,GATI,CAAP;AAUD,CAdD;;AAgBA;;;;;;;AAOA,IAAI,sCAAsC,SAAtC,mCAAsC,CAAU,YAAV,EAAwB,MAAxB,EAAgC;AACxE,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC;AACA,QAAI,mBAAmB;AACrB,cAAQ,uBADa;AAErB,oBAAc,OAAO,OAAP,CAAe,kBAFR;AAGrB,iBAAW,OAAO,OAAP,CAAe,SAHL;AAIrB,mBAAgB,OAAO,OAAP,CAAe,kBAA/B;AAJqB,KAAvB;AAMA,iBAAa,aAAb,CAA2B,gBAA3B,EAA6C,UAAC,GAAD,EAAM,IAAN,EAAe;AAC1D,UAAI,GAAJ,EAAS;AACP,YAAI,IAAI,OAAJ,CAAY,KAAZ,CAAkB,yHAAlB,CAAJ,EAAkJ;AAChJ,kBAAQ,GAAR,+DAAwE,iBAAiB,YAAzF,mCAAmI,iBAAiB,WAApJ;AACA;AACD,SAHD,MAGO;AACL,kBAAQ,KAAR,yDAAoE,KAAK,SAAL,CAAe,GAAf,CAApE,QAA4F,IAAI,KAAhG;AACA,iBAAO,GAAP;AACD;AACF,OARD,MASK;AACH,gBAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAZ;AACA;AACD;AACF,KAdD;AAeD,GAvBM,CAAP;AAwBD,CAzBD;;AA2BA;;;;;;;;AAQA,IAAI,oCAAoC,SAApC,iCAAoC,CAAU,oBAAV,EAAgC,MAAhC,EAAwC,MAAxC,EAAgD;AACtF,SAAO,IAAI,QAAJ,CAAa,UAAC,OAAD,EAAU,MAAV,EAAqB;AACvC,QAAI,mBAAmB;AACrB,sBAAgB,OAAO,OAAP,CAAe,GADV,EACe;AACpC,oCAA4B,OAAO,YAFd;AAGrB,qBAAe,EAHM;AAIrB,qCAA6B,OAAO;AAJf,KAAvB;AAMA,YAAQ,GAAR,qBAA8B,OAAO,YAArC;AACA,YAAQ,GAAR,mBAA4B,iBAAiB,UAA7C;AACA,YAAQ,GAAR,sBAA+B,iBAAiB,YAAhD;AACA,yBAAqB,qBAArB,CAA2C,gBAA3C,EAA6D,UAAC,GAAD,EAAM,IAAN,EAAe;AAC1E,UAAI,GAAJ,EAAS;AACP,YAAI,IAAI,OAAJ,CAAY,KAAZ,CAAkB,0CAAlB,CAAJ,EAAmE;AACjE;AACA;AACA;AACA,kBAAQ,KAAR,iGAA4G,iBAAiB,YAA7H,sBAA0J,iBAAiB,UAA3K;AACA;AACD,SAND,MAOK;AACH,kBAAQ,KAAR,gDAA2D,KAAK,SAAL,CAAe,GAAf,CAA3D;AACA,iBAAO,GAAP;AACD;AACF,OAZD,MAaK;AACH,gBAAQ,GAAR,6DAAsE,iBAAiB,YAAvF,sBAAoH,iBAAiB,UAArI,qBAA+J,KAAK,SAAL,CAAe,IAAf,CAA/J;AACA;AACD;AACF,KAlBD;AAmBD,GA7BM,CAAP;AA8BD,CA/BD;;AAkCA,OAAO,OAAP,GAAiB,aAAjB","file":"index.js","sourcesContent":["const fs = require('fs');\r\nconst AWS = require('aws-sdk');\r\nconst extend = require('util')._extend;\r\nconst async = require('async');\r\nconst HttpsProxyAgent = require('https-proxy-agent');\r\nconst Bluebird = require('bluebird');\r\nconst retry = require('bluebird-retry');\r\nconst lodash = require('lodash');\r\n\r\nconst LAMBDA_RUNTIME = 'nodejs4.3';\r\n\r\nconst nodeAwsLambda = () => {\r\n  return this;\r\n};\r\n\r\nexport function deployLambda(codePackage, config, lambdaClient, callback) {\r\n  return deployLambdaFunction(codePackage, config, lambdaClient)\r\n    .asCallback(callback);\r\n}\r\n\r\n/**\r\n * deploys a lambda, creates a rule, and then binds the lambda to the rule by creating a target\r\n * @param {file} codePackage a zip of the collection\r\n * @param {object} config note: should include the rule property that is an object of: {name, scheduleExpression, isEnabled, role, targetInput} scheduleExpression is a duration, you can write it like so: 'cron(0 20 * * ? *)', 'rate(5 minutes)'. Note if using rate, you can also have seconds, minutes, hours. isEnabled true or false\r\n * @param lambdaClient\r\n * @param {function} callback the arguments are error and data\r\n *\r\n */\r\nexport function deployScheduleLambda(codePackage, config, lambdaClient, callback) {\r\n  let functionArn = '';\r\n\r\n  return deployLambdaFunction(codePackage, config, lambdaClient, callback)\r\n      .then(result => {\r\n        functionArn = result.functionArn;\r\n\r\n        if (!config.hasOwnProperty('rule') &&\r\n            (!config.rule.hasOwnProperty('name') ||\r\n             !config.rule.hasOwnProperty('scheduleExpression') ||\r\n             !config.rule.hasOwnProperty('isEnabled') ||\r\n             !config.rule.hasOwnProperty('role'))){\r\n          throw new Error('rule is required. Please include a property called rule that is an object which has the following: {name, scheduleExpression, isEnabled, role}');\r\n        }\r\n\r\n       return createCloudWatchEventRuleFunction(config.rule);\r\n      }).then(eventResult => {\r\n        let targetInput = config.rule.targetInput ? JSON.stringify(config.rule.targetInput) : null;\r\n        return _createCloudWatchTargetsFunction({Rule: config.rule.name, Targets: [{Id: `${config.functionName}-${config.rule.name}`, Arn: functionArn, Input: targetInput}]})\r\n      }).catch((err) => {\r\n        console.error(`Error: ${JSON.stringify(err)}`);\r\n        throw err;\r\n      }).asCallback(callback)\r\n}\r\n\r\n/**\r\n * creates a rule\r\n * @param {object} config should include the rule property that is an object of: {name, scheduleExpression, isEnabled, role, targetInput} scheduleExpression is a duration, you can write it like so: 'cron(0 20 * * ? *)', 'rate(5 minutes)'. Note if using rate, you can also have seconds, minutes, hours. isEnabled true or false\r\n * @param {function} callback\r\n */\r\nexport function createCloudWatchEventRule(config, callback){\r\n  return createCloudWatchEventRuleFunction(config)\r\n      .catch((err) => {\r\n        console.error(`Error: ${JSON.stringify(err)}`);\r\n        throw err;\r\n      }).asCallback(callback);\r\n}\r\n\r\n/**\r\n * sets up a target, which creates the binding of a arn to a cloud watch event rule\r\n * @param {object} config {Rule, Targets} Rule is string (name of the rule, Targets is an array of {Arn *required*, Id *required*, Input, InputPath}. Arn of source linked to target, Id is a unique name for the target, Input the json\r\n * @param {function} callback\r\n */\r\nexport function createCloudWatchTargets(config, callback){\r\n  return _createCloudWatchTargetsFunction(config)\r\n      .catch((err) => {\r\n        console.error(`Error: ${JSON.stringify(err)}`);\r\n        throw true;\r\n      })\r\n      .asCallback(callback)\r\n}\r\n\r\nlet deployLambdaFunction = function(codePackage, config, lambdaClient){\r\n  let functionArn = '';\r\n  if (!lambdaClient) {\r\n    if (\"profile\" in config) {\r\n      AWS.config.credentials = new AWS.SharedIniFileCredentials({profile: config.profile});\r\n    }\r\n\r\n    if (process.env.HTTPS_PROXY) {\r\n      if (!AWS.config.httpOptions) {\r\n        AWS.config.httpOptions = {};\r\n      }\r\n\r\n      AWS.config.httpOptions.agent = new HttpsProxyAgent(process.env.HTTPS_PROXY);\r\n    }\r\n\r\n    lambdaClient = new AWS.Lambda({\r\n      region: 'region' in config ? config.region : 'us-east-1',\r\n      accessKeyId: \"accessKeyId\" in config ? config.accessKeyId : '',\r\n      secretAccessKey: \"secretAccessKey\" in config ? config.secretAccessKey : ''\r\n    });\r\n\r\n    console.log(`Access Key Id From Deployer: ${config.accessKeyId}`);\r\n  }\r\n\r\n  let snsClient = new AWS.SNS({\r\n    region: 'region' in config ? config.region : 'us-east-1',\r\n    accessKeyId: 'accessKeyId' in config ? config.accessKeyId : '',\r\n    secretAccessKey: 'secretAccessKey' in config ? config.secretAccessKey : ''\r\n  });\r\n\r\n  let cloudWatchLogsClient = new AWS.CloudWatchLogs({\r\n    region: 'region' in config ? config.region : 'us-east-1',\r\n    accessKeyId: \"accessKeyId\" in config ? config.accessKeyId : \"\",\r\n    secretAccessKey: \"secretAccessKey\" in config ? config.secretAccessKey : \"\"\r\n  });\r\n\r\n  let params = {\r\n    FunctionName: config.functionName,\r\n    Description: config.description,\r\n    Handler: config.handler,\r\n    Role: config.role || 'arn:aws:iam::677310820158:role/lambda_basic_execution',\r\n    Timeout: config.timeout || 10,\r\n    MemorySize: config.memorySize || 128,\r\n    Runtime: config.runtime || LAMBDA_RUNTIME\r\n  };\r\n\r\n  return _getLambdaFunction(lambdaClient, params.FunctionName)\r\n      .then((getResult) => {\r\n        if (!getResult.lambdaExists) {\r\n          return _createLambdaFunction(lambdaClient, codePackage, params)\r\n              .then((createFunctionResult) => {\r\n                functionArn = createFunctionResult.functionArn;\r\n              })\r\n              .then(() => _updateEventSource(lambdaClient, config))\r\n              .then(() => _updatePushSource(lambdaClient, snsClient, config, functionArn))\r\n              .then(() => {\r\n                let localAttachLoggingFunction = () => {return _attachLogging(lambdaClient, cloudWatchLogsClient, config, params)};\r\n                return retry(localAttachLoggingFunction, {max_tries: 3, interval: 1000, backoff: 500});\r\n              })\r\n              .catch((err) => {\r\n                console.error(`Error: ${JSON.stringify(err)}`);\r\n                throw err;\r\n              });\r\n        }else {\r\n          let existingFunctionArn = getResult.functionArn;\r\n          return _updateLambdaFunction(lambdaClient, codePackage, params)\r\n              .then(() => _updateEventSource(lambdaClient, config))\r\n              .then(() => _updatePushSource(lambdaClient, snsClient, config, existingFunctionArn))\r\n              .then(() => _publishLambdaVersion(lambdaClient, config))\r\n              .then(() => {\r\n                let localAttachLoggingFunction = () => {return _attachLogging(lambdaClient, cloudWatchLogsClient, config, params)};\r\n                return retry(localAttachLoggingFunction, {max_tries: 3, interval: 1000, backoff: 500});\r\n              })\r\n              .catch((err) => {\r\n                console.error(`Error: ${JSON.stringify(err)}`);\r\n                throw err;\r\n              });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(`Error: ${JSON.stringify(err)}`);\r\n        throw err;\r\n      });\r\n};\r\n\r\n/**\r\n * Creates or Updates rules, this means you can disable or enable the state of this\r\n * @param {object} config {name, scheduleExpression, isEnabled, role} scheduleExpression is a duration, you can write it like so: 'cron(0 20 * * ? *)', 'rate(5 minutes)'. Note if using rate, you can also have seconds, minutes, hours. isEnabled true or false\r\n * @returns {Promise<object>|Promise<Error>}\r\n * @private\r\n */\r\nlet createCloudWatchEventRuleFunction = function (config) {\r\n  /* params\r\n   {Name: 'STRING_VALUE', // required!//\r\n    Description: 'STRING_VALUE',\r\n    EventPattern: 'STRING_VALUE',\r\n    RoleArn: 'STRING_VALUE',\r\n    ScheduleExpression: 'STRING_VALUE',\r\n    State: 'ENABLED | DISABLED' }\r\n  */\r\n\r\n  let params = {\r\n    Name: config.name,\r\n    ScheduleExpression: config.scheduleExpression,\r\n    Role: config.role || 'arn:aws:iam::677310820158:role/lambda_basic_execution',\r\n    State: config.isEnabled ? 'ENABLED' : 'DISABLED'\r\n  };\r\n\r\n  let cloudWatchEvents = new AWS.CloudWatchEvents({\r\n    region: 'region' in config ? config.region : 'us-east-1',\r\n    accessKeyId: 'accessKeyId' in config ? config.accessKeyId : '',\r\n    secretAccessKey: 'secretAccessKey' in config ? config.secretAccessKey : ''\r\n  });\r\n\r\n  return new Bluebird((resolve, reject) => {\r\n    cloudWatchEvents.putRule(params, function (err, data) {\r\n      if (err) {\r\n        return reject(err);\r\n      }\r\n\r\n      return resolve(data);\r\n    });\r\n  });\r\n};\r\n\r\nlet _createCloudWatchTargetsFunction = function(config) {\r\n  let cloudWatchEvents = new AWS.CloudWatchEvents({\r\n    region: 'region' in config ? config.region : 'us-east-1',\r\n    accessKeyId: 'accessKeyId' in config ? config.accessKeyId : '',\r\n    secretAccessKey: 'secretAccessKey' in config ? config.secretAccessKey : ''\r\n  });\r\n\r\n  //targets[{Id, Arn, Input}] Input is the JSON text sent to target\r\n  return new Bluebird((resolve, reject) => {\r\n    cloudWatchEvents.putTargets(params, function (err, data) {\r\n      if (err) {\r\n        return reject(err);\r\n      }\r\n\r\n      return resolve(data);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param functionName\r\n * @returns {bluebird|exports|module.exports}\r\n * Resolved Object:\r\n * lambdaExists - boolean flag that is true if lambda exists\r\n * functionArn - this is a string that contains arn to the lambda function\r\n * @private\r\n */\r\nlet _getLambdaFunction = function (lambdaClient, functionName) {\r\n  return new Bluebird((resolve, reject) => {\r\n    let getFunctionParams = {\r\n      FunctionName: functionName\r\n    };\r\n\r\n    lambdaClient.getFunction(getFunctionParams, function (err, data) {\r\n      if (err && err.statusCode !== 404) {\r\n        console.log(`AWS API request failed. Check your AWS credentials and permissions. [Error: ${JSON.stringify(err)}]`);\r\n        reject(err);\r\n      }\r\n      else if (err && err.statusCode === 404) {\r\n        console.log(`Lambda not found. [LambdaName: ${functionName}]`);\r\n        resolve({lambdaExists: false});\r\n      }\r\n      else {\r\n        console.log(`Lambda found! [LambdaName: ${functionName}]`);\r\n        resolve({\r\n          lambdaExists: true,\r\n          functionArn: data.Configuration.FunctionArn\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param codePackage\r\n * @param params\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _createLambdaFunction = function (lambdaClient, codePackage, params) {\r\n  return new Bluebird((resolve, reject) => {\r\n    console.log(`Creating LambdaFunction. [FunctionName: ${params.FunctionName}]`);\r\n    let data = fs.readFileSync(codePackage);\r\n\r\n    params.Code = {ZipFile: data};\r\n    lambdaClient.createFunction(params, function (err, data) {\r\n      if (err) {\r\n        console.erroor(`Create function failed. Check your iam:PassRole permissions. [Error: ${JSON.stringify(err)}]`);\r\n        reject(err);\r\n      } else {\r\n        console.log(`Created Lambda successfully. [Data: ${JSON.stringify(data)}]`);\r\n        resolve({functionArn: data.FunctionArn});\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param codePackage\r\n * @param params\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _updateLambdaFunction = function (lambdaClient, codePackage, params) {\r\n  return new Bluebird((resolve, reject) => {\r\n    console.log(`Updating LambdaFunction. [FunctionName: ${params.FunctionName}]`);\r\n    let data = fs.readFileSync(codePackage);\r\n\r\n    let updateFunctionParams = {\r\n      FunctionName: params.FunctionName,\r\n      ZipFile: data,\r\n      Publish: false\r\n    };\r\n\r\n    lambdaClient.updateFunctionCode(updateFunctionParams, function (err, data) {\r\n      if (err) {\r\n        console.lerror(`UpdateFunction Error: ${JSON.stringify(err)}`);\r\n        reject(err);\r\n      } else {\r\n        lambdaClient.updateFunctionConfiguration(params, function (err, data) {\r\n          if (err) {\r\n            console.error(`UpdateFunctionConfiguration Error: ${JSON.stringify(err)}`);\r\n            reject(err);\r\n          } else {\r\n            console.log(`Successfully updated lambda. [FunctionName: ${params.FunctionName}] [Data: ${JSON.stringify(data)}]`);\r\n            resolve();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param config\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _updateEventSource = function (lambdaClient, config) {\r\n  return new Bluebird((resolve, reject) => {\r\n    if (!config.eventSource) {\r\n      resolve();\r\n      return;\r\n    }\r\n\r\n    let localParams = extend({\r\n      FunctionName: config.functionName\r\n    }, config.eventSource);\r\n\r\n    let getEventSourceMappingsParams = {\r\n      FunctionName: localParams.FunctionName,\r\n      EventSourceArn: localParams.EventSourceArn\r\n    };\r\n\r\n    lambdaClient.listEventSourceMappings(getEventSourceMappingsParams, function (err, data) {\r\n      if (err) {\r\n        console.error(\"List event source mapping failed, please make sure you have permission\");\r\n        console.error(`error: ${err}`);\r\n        reject(err);\r\n      } else if (data.EventSourceMappings.length === 0) {\r\n        lambdaClient.createEventSourceMapping(localParams, function (err, data) {\r\n          if (err) {\r\n            console.error(`Failed to create event source mapping! Error: ${err}`);\r\n            reject(err);\r\n          } else {\r\n            resolve();\r\n          }\r\n        });\r\n      } else {\r\n        async.eachSeries(data.EventSourceMappings, function (mapping, iteratorCallback) {\r\n\r\n          let updateEventSourceMappingParams = {\r\n            UUID: mapping.UUID,\r\n            BatchSize: localParams.BatchSize\r\n          };\r\n\r\n          lambdaClient.updateEventSourceMapping(updateEventSourceMappingParams, iteratorCallback);\r\n        }, function (err) {\r\n          if (err) {\r\n            console.error(`Update event source mapping failed. ${err}`);\r\n            reject(err);\r\n          }\r\n          else {\r\n            resolve();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param snsClient\r\n * @param config\r\n * @param functionArn\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _updatePushSource = function (lambdaClient, snsClient, config, functionArn) {\r\n  if (!config.pushSource) {\r\n    return Bluebird.resolve(true);\r\n  }\r\n\r\n  return Bluebird.each(config.pushSource, (currentTopic, currentIndex, length) => {\r\n    console.log(`Executing Topic ${currentIndex} of ${length}`);\r\n    console.log(`Current Topic: ${JSON.stringify(currentTopic)}`);\r\n    let currentTopicNameArn = currentTopic.TopicArn;\r\n    let currentTopicStatementId = currentTopic.StatementId;\r\n    let topicName = currentTopic.TopicArn.split(':').pop();\r\n\r\n    return _createTopicIfNotExists(snsClient, topicName)\r\n      .then(() => _subscribeLambdaToTopic(lambdaClient, snsClient, config, functionArn, topicName, currentTopicNameArn, currentTopicStatementId))\r\n      .catch((err) => {\r\n        console.error(`Error: ${JSON.stringify(err)}`);\r\n        throw err;\r\n      });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param snsClient\r\n * @param topicName\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _createTopicIfNotExists = function (snsClient, topicName) {\r\n  return new Bluebird((resolve, reject) => {\r\n    var listTopicParams = {};\r\n\r\n    snsClient.listTopics(listTopicParams, function (err, data) {\r\n      if (err) {\r\n        console.error(`Failed to list to topic. Error: ${JSON.stringify(err)}`);\r\n        reject(err);\r\n      }\r\n      else {\r\n        let foundTopic = lodash.find(data.Topics, (o) => o.TopicArn === topicName);\r\n        if (!lodash.isUndefined(foundTopic)) {\r\n          resolve();\r\n        } else {\r\n          let createParams = {\r\n            Name: topicName\r\n          };\r\n\r\n          snsClient.createTopic(createParams, function (err, data) {\r\n            if (err) {\r\n              console.error(`Failed to create to topic. Error ${JSON.stringify(err)}`);\r\n              reject(err);\r\n            }\r\n            else {\r\n              resolve();\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param snsClient\r\n * @param config\r\n * @param functionArn\r\n * @param topicName\r\n * @param currentTopicNameArn\r\n * @param currentTopicStatementId\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _subscribeLambdaToTopic = function (lambdaClient, snsClient, config, functionArn, topicName, currentTopicNameArn, currentTopicStatementId) {\r\n  return new Bluebird((resolve, reject) => {\r\n\r\n    let subParams = {\r\n      Protocol: 'lambda',\r\n      Endpoint: functionArn,\r\n      TopicArn: currentTopicNameArn\r\n    };\r\n\r\n    snsClient.subscribe(subParams, function (err, data) {\r\n      if (err) {\r\n        console.error(`Failed to subscribe to topic. [Topic Name: ${topicName}] [TopicArn: ${subParams.TopicArn}] [Error: ${JSON.stringify(err)}]`);\r\n        reject(err);\r\n      }\r\n      else {\r\n        let removePermissionParams = {\r\n          FunctionName: config.functionName,\r\n          StatementId: currentTopicStatementId\r\n        };\r\n        lambdaClient.removePermission(removePermissionParams, function (err, data) {\r\n          if (err && err.StatusCode === 404) {\r\n            console.error(`Permission does not exist. [Error: ${JSON.stringify(err)}]`);\r\n          }\r\n          else if (err && err.statusCode !== 404) {\r\n            console.error(`Unable to delete permission. [Error: ${JSON.stringify(err)}]`);\r\n          }\r\n          else {\r\n            console.log(`Permission deleted successfully! [Data: ${JSON.stringify(data)}]`);\r\n          }\r\n\r\n          let permissionParams = {\r\n            FunctionName: config.functionName,\r\n            Action: \"lambda:InvokeFunction\",\r\n            Principal: \"sns.amazonaws.com\",\r\n            StatementId: currentTopicStatementId,\r\n            SourceArn: currentTopicNameArn\r\n          };\r\n          lambdaClient.addPermission(permissionParams, function (err, data) {\r\n            if (err) {\r\n              console.error(`Failed to add permission. [Error: ${JSON.stringify(err)}]`);\r\n              reject(err);\r\n            }\r\n            else {\r\n              console.log(`Succeeded in adding permission. [Data: ${JSON.stringify(data)}]`);\r\n              resolve();\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param config\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _publishLambdaVersion = function (lambdaClient, config) {\r\n  return _publishVersion(lambdaClient, config)\r\n    .then(() => _listVersionsByFunction(lambdaClient, config))\r\n    .then((listVersionsResult) => {\r\n\r\n      let versionsToDelete = [];\r\n      let last = listVersionsResult.Versions[listVersionsResult.Versions.length - 1].Version;\r\n      for (let index = 0; index < listVersionsResult.Versions.length; ++index) {\r\n        let version = listVersionsResult.Versions[index].Version;\r\n        if (version !== \"$LATEST\" && version !== last) {\r\n          versionsToDelete.push(_deleteLambdaFunctionVersion(lambdaClient, config, version));\r\n        }\r\n      }\r\n\r\n      return Bluebird.all(versionsToDelete);\r\n\r\n    });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param config\r\n * @returns {Promise}\r\n * @private\r\n */\r\nlet _publishVersion = function (lambdaClient, config) {\r\n  return new Bluebird((resolve, reject) => {\r\n    let publishVersionParams = {FunctionName: config.functionName};\r\n\r\n    lambdaClient.publishVersion(publishVersionParams, function (err, data) {\r\n      if (err) {\r\n        console.error(`Error Publishing Version. [Error: ${JSON.stringify(err)}]`);\r\n        reject(err);\r\n      } else {\r\n        console.log(`Successfully published version. [Data: ${JSON.stringify(data)}]`);\r\n        resolve(data);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param config\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _listVersionsByFunction = function (lambdaClient, config) {\r\n  return new Bluebird((resolve, reject) => {\r\n    let listVersionsParams = {FunctionName: config.functionName};\r\n    lambdaClient.listVersionsByFunction(listVersionsParams, function (listErr, data) {\r\n      if (listErr) {\r\n        console.error(`Error Listing Versions for Lambda Function. [Error: ${JSON.stringify(listErr)}]`);\r\n        reject(listErr);\r\n      } else {\r\n        resolve(data);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param config\r\n * @param version\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _deleteLambdaFunctionVersion = function (lambdaClient, config, version) {\r\n  return new Bluebird((resolve) => {\r\n\r\n    let deleteFunctionParams = {\r\n      FunctionName: config.functionName,\r\n      Qualifier: version\r\n    };\r\n\r\n    lambdaClient.deleteFunction(deleteFunctionParams, function (err, data) {\r\n      if (err) {\r\n        console.error(`Failed to delete lambda version. [FunctionName: ${config.functionName}] [Version: ${version}]`);\r\n      }\r\n      else {\r\n        console.log(`Successfully deleted lambda version. [FunctionName: ${config.functionName}] [Version: ${version}]`);\r\n      }\r\n      resolve();\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param cloudWatchLogsClient\r\n * @param config\r\n * @param params\r\n * @returns {*}\r\n * @private\r\n */\r\nlet _attachLogging = function (lambdaClient, cloudWatchLogsClient, config, params) {\r\n  if (!config.logging) {\r\n    return Promise.resolve('no logging to attach');\r\n  }\r\n  return _addLoggingLambdaPermissionToLambda(lambdaClient, config)\r\n    .then(() => _updateCloudWatchLogsSubscription(cloudWatchLogsClient, config, params))\r\n    .catch(err => {\r\n      let parsedStatusCode = lodash.get(err, 'statusCode', '');\r\n      console.error(`Error occurred in _attachLogging. [StatusCode: ${parsedStatusCode}]`);\r\n      if(parsedStatusCode !== 429 && err.statusCode !== '429') {\r\n        console.error(`Received a non-retry throttle error`);\r\n        throw new retry.StopError(`Recieved non-retry throttle error.  [Error: ${JSON.stringify(err)}]`);\r\n      }\r\n    });\r\n};\r\n\r\n/**\r\n *\r\n * @param lambdaClient\r\n * @param config\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _addLoggingLambdaPermissionToLambda = function (lambdaClient, config) {\r\n  return new Bluebird((resolve, reject) => {\r\n    // Need to add the permission once, but if it fails the second time no worries.\r\n    let permissionParams = {\r\n      Action: 'lambda:InvokeFunction',\r\n      FunctionName: config.logging.LambdaFunctionName,\r\n      Principal: config.logging.Principal,\r\n      StatementId: `${config.logging.LambdaFunctionName}LoggingId`\r\n    };\r\n    lambdaClient.addPermission(permissionParams, (err, data) => {\r\n      if (err) {\r\n        if (err.message.match(/The statement id \\(.*?\\) provided already exists. Please provide a new statement id, or remove the existing statement./i)) {\r\n          console.log(`Lambda function already contains loggingIndex [Function: ${permissionParams.FunctionName}] [Permission StatementId: ${permissionParams.StatementId}]`);\r\n          resolve();\r\n        } else {\r\n          console.error(`Error Adding Logging Permission to Lambda. [Error: ${JSON.stringify(err)}]`, err.stack);\r\n          reject(err);\r\n        }\r\n      }\r\n      else {\r\n        console.log(JSON.stringify(data, null, 2));\r\n        resolve();\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param cloudWatchLogsClient\r\n * @param config\r\n * @param params\r\n * @returns {bluebird|exports|module.exports}\r\n * @private\r\n */\r\nlet _updateCloudWatchLogsSubscription = function (cloudWatchLogsClient, config, params) {\r\n  return new Bluebird((resolve, reject) => {\r\n    let cloudWatchParams = {\r\n      destinationArn: config.logging.Arn, /* required */\r\n      filterName: `LambdaStream_${params.FunctionName}`,\r\n      filterPattern: '',\r\n      logGroupName: `/aws/lambda/${params.FunctionName}`\r\n    };\r\n    console.log(`Function Name: ${params.FunctionName}`);\r\n    console.log(`Filter Name: ${cloudWatchParams.filterName}`);\r\n    console.log(`Log Group Name: ${cloudWatchParams.logGroupName}`);\r\n    cloudWatchLogsClient.putSubscriptionFilter(cloudWatchParams, (err, data) => {\r\n      if (err) {\r\n        if (err.message.match(/The specified log group does not exist./i)) {\r\n          //this error shouldn't stop the deploy since its due to the lambda having never been executed in order to create the log group in Cloud Watch Logs,\r\n          // so we are going to ignore this error\r\n          // ..we should recover from this by creating the log group or it will be resolved on next execution after the lambda has been run once\r\n          console.error(`Failed to add subscription filter to lambda due it log group not existing.  [LogGroupName: ${cloudWatchParams.logGroupName}][FilterName: ${cloudWatchParams.filterName}]`);\r\n          resolve();\r\n        }\r\n        else {\r\n          console.error(`Failed To Add Mapping For Logger. [Error: ${JSON.stringify(err)}]`);\r\n          reject(err);\r\n        }\r\n      }\r\n      else {\r\n        console.log(`Successfully added subscription Filter. [LogGroupName: ${cloudWatchParams.logGroupName}][FilterName: ${cloudWatchParams.filterName}] [Response: ${JSON.stringify(data)}]`);\r\n        resolve();\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n\r\nmodule.exports = nodeAwsLambda;\r\n"],"sourceRoot":"/source/"}